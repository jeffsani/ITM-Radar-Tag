---
name: itm-radar-tag
namespace: com.citrix.adc.stylebooks
version: "1.0"
display-name: "Citrix ITM Radar Tag"
description: "This stylebook creates the required rewrite policy and action on Citrix ADC to create the Citrix Intelligent Traffic Manager Real User Measurement JavaScript tag"
schema-version: "1.0"
import-stylebooks:
  -
    namespace: netscaler.nitro.config
    prefix: ns
    version: "11.0"
parameters:
  -
    name: itm-radar-tag
    label: Citrix ITM Radar Tag
    description: |
     <h1>Citrix ITM Radar Tag</h1>
     <table style="table-layout: fixed; width: 70%;" cellpadding="2">
     <tr>
        <td align="center" width="33%"><img src="https://www.citrix.com/content/dam/citrix61/en_us/images/graphics/130-datacenters.png"></td>
        <td align="center" width="33%"><img src="https://www.citrix.com/content/dam/citrix61/en_us/images/graphics/130-datacenters.png"></td>
        <td align="center" width="33%"><img src="https://www.citrix.com/content/dam/citrix61/en_us/images/graphics/14b-rum-data.png"></td>
     </tr>
     <tr>
        <td style="text-align: center" width="33%">More than <strong>50,000 networks</strong></td>
        <td style="text-align: center" width="33%">Over <strong>130 Clouds, CDNs and Datacenters</strong> measured daily</td>
        <td style="text-align: center" width="33%">Over <strong>14 billion RUM data points</strong> every day.</td>
     </tr>
     <tr>
        <td colspan="3"></td>
     </tr>
     <tr>
        <td colspan="3" style="word-wrap: break-word" width="33%">- This stylebook creates a Rewrite policy and action on ADC which can be used ot inject the Citrix Intelligent Traffic Manager (ITM) Real User Measurement JavaScript tag.</td>
     </tr>
     <tr>
        <td colspan="3" style="word-wrap: break-word" width="33%">- For more infomration about the ITM Radar Tag, see the ITM documenation <a href="https://docs.citrix.com/en-us/citrix-intelligent-traffic-management/radar.html" target="_blank">here</a>.  For more information about Citrix ITM click <a href="https://www.citrix.com/products/citrix-intelligent-traffic-management/" target="_blank">here</a></td>
     </tr>
     <tr>
        <td colspan="3" style="word-wrap: break-word" width="33%">- You can optionally bind the generated policy to a specific HTTP, SSL, or VPN VServer</td>
     </tr>
     <tr>
        <td colspan="3" style="word-wrap: break-word" width="33%">- If the Rewrite feature is not enabled, this StyleBook will first enable the feature prior to creating the policy and action. Fields marked with an * are required</td>
     </tr>

     </table>
    type: object
    required: true
    parameters:
      -
        name: tagid
        label: ITM Radar Tag ID
        description: |
         Input the Customer ID for your Radar Tag which can be found in your citrix.cloud.com <a href="https://itm.cloud.com/ui/radar/tag">ITM Management portal</a>
        type: string
        key: true
        gui:
         updatable: true
        required: true
      -
        name: tagtype
        label: ITM Radar Tag type
        description: |
         <table style="border-spacing: 1px;border: 1px solid black;">
         <caption>Radar Tag Type Legend</caption>
         <tr style="color: white;background-color: black;">
           <th width="30%">Tag Type</th>
           <th width="70%">Description</th>
         </tr>
         <tr>
           <td width="30%">Default Radar Tag</td>
           <td width="70%">This is the recommended version of the Radar tag. This version waits until the load event is complete before downloading and executing the Radar Client, ensuring that the load event is uninterrupted</td>
         </tr>
         <tr>
          <td width="30%">Pre-loading Radar Tag</td>
          <td width="70%>This version of the tag keeps the download of the Radar Client from blocking further parsing of the page, but executes it before the load event has fired. It is mainly for customers using Content Security Policy settings preventing the use of inline JavaScript. It is also for customers using the Video QoS plugin, where the Radar Client needs to load as early as possible.</td>
         </tr>
         </table>
        type: string
        allowed-values:
         - "Default"
         - "Pre-loading"
        default: "Default"
        required: true
      -
        name: tag-rw-policy
        label: Rewrite Policy
        description: The conditions which need to be met to invoke the rewrite policy that inserts the radar tag.
        type: string
        default: HTTP.RES.HEADER("Content-Type").TO_LOWER.CONTAINS("text/html")
        required: true
  -
    name: vserver-binding
    label: VServer Binding (optional)
    description: Specify the VServer object you want to bind this policy to.
    type: object
    required: false
    parameters:
      -
        name: vserver-name
        label: Virtual Server Name
        description: Exact virtual server name to which the rewrite policy is bound
        type: string
        required: true
      -
        name: vserver-type
        label: VServer Type
        description: Type of Virtual Server the policy will be bound to
        type: string
        allowed-values:
         - "LB"
         - "CS"
        default: "LB"
        required: true
      -
        name: bind-priority
        label: VServer Binding Priority
        description: The priority to use when binding the policy to the specified VServer
        type: number
        default: 100
        required: true
components:
  -
    name: rewrite-enable-feature-comp
    type: ns::nsfeature
    description: Enables the REWRITE feature on Citrix ADC
    meta-properties:
      action: enable
    properties:
      feature: ["rewrite"]
  -
    name: rewrite-action-default
    type: ns::rewriteaction
    condition: $parameters.itm-radar-tag.tagtype == "Default"
    properties:
      name: "itm-radar-rewrite-action"
      type: replace_all
      target: str(HTTP.RES.BODY) + "(" + HTTP.RES.CONTENT_LENGTH + ")" + ")"
      stringbuilderexpr: >-
        str("<script>/r/n if (") + "typeof window.addEventListener === \"function\"" + ") {/r/n  window.addEventListener(\"load\", function()) {" + "/r/n" +
        "if window.cedexis === undefined" + " {/r/n" +
        "var radar = document.createElement(\"script\");/r/n" +
        "radar.src = \"//radar.cedexis.com/1/" + str($parameters.itm-radar-tag.tagid) + "/radar.js\";/r/n" +
        "document.body.appendChild(radar);/r/n" +
        "}/r/n" +
        "});/r/n" +
        "}/r/n" +
        "</script>\r\n</body>"
      search: str("text(") + "\"" + str(</body>) + "\"" + ")"
  -
    name: rewrite-action-preload
    type: ns::rewriteaction
    condition: $parameters.itm-radar-tag.tagtype == "Pre-loading"
    properties:
       name: "itm-radar-rewrite-action"
       type: replace_all
       target: str("HTTP.RES.BODY(") + str("HTTP.RES.CONTENT_LENGTH)")
       stringbuilderexpr: >-
        str("<script async src=\"//radar.cedexis.com/1/") + str($parameters.itm-radar-tag.tagid) + str("/radar.js\">") +
        "</script>\r\n</body>"
       search: str("text(\"</body>\")")
  -
    name: rewrite-policy
    type: ns::rewritepolicy
    description: The rewrite policy uses the default or preload action based on user selected radar tag type
    properties:
      name: "itm-radar-rewrite-policy"
      rule: $parameters.itm-radar-tag.tag-rw-policy
      action: if-then-else($parameters.itm-radar-tag.tagtype == "Pre-loading", if-then-else($parameters.itm-radar-tag.tagtype != "Default", $components.rewrite-action-preload.properties.name), $components.rewrite-action-default.properties.name)
  -
    name: rewrite-policy-binding-lb
    type: ns::lbvserver_rewritepolicy_binding
    condition: $parameters.vserver-binding.vserver.type == "LB"
    properties:
      name: $parameters.vserver-binding.vserver-name
      policyname: $components.rewrite-policy.properties.name
      priority: $parameters.vserver-binding.bind-priority
      gotopriorityexpression: END
      bindpoint: RESPONSE
  -
    name: rewrite-policy-binding-cs
    type: ns::csvserver_rewritepolicy_binding
    condition: $parameters.vserver-binding.vserver.type == "CS"
    properties:
      name: $parameters.vserver-binding.vserver-name
      policyname: $components.rewrite-policy.properties.name
      priority: $parameters.vserver-binding.bind-priority
      gotopriorityexpression: END
      bindpoint: RESPONSE
outputs:
  -
    name: itm-radar-rw-policy
    value: $components.rewrite-policy
