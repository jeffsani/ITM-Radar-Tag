---
name: itm-radar-tag
namespace: com.citrix.adc.stylebooks
version: "1.1"
display-name: "Citrix ITM Radar Tag"
description: "This stylebook creates the required rewrite policy and action on Citrix ADC to create the Citrix Intelligent Traffic Manager Real User Measurement JavaScript tag"
schema-version: "1.0"
import-stylebooks:
  -
    namespace: netscaler.nitro.config
    prefix: ns
    version: "11.0"
  -
    namespace: com.citrix.adc.commontypes
    prefix: cmtypes
    version: "1.0"
parameters:
  -
    name: itm-radar-tag
    label: Citrix ITM Radar Tag
    description: |
     <h1>Citrix ITM Radar Tag</h1>
     <table style="table-layout: fixed; width: 70%;" cellpadding="2">
     <tr>
        <td align="center" width="33%"><img src="https://www.citrix.com/content/dam/citrix61/en_us/images/graphics/50k-networks.png"></td>
        <td align="center" width="33%"><img src="https://www.citrix.com/content/dam/citrix61/en_us/images/graphics/130-datacenters.png"></td>
        <td align="center" width="33%"><img src="https://www.citrix.com/content/dam/citrix61/en_us/images/graphics/14b-rum-data.png"></td>
     </tr>
     <tr>
        <td style="text-align: center" width="33%">More than <strong>50,000 networks</strong></td>
        <td style="text-align: center" width="33%">Over <strong>130 Clouds, CDNs and Datacenters</strong> measured daily</td>
        <td style="text-align: center" width="33%">Over <strong>14 billion RUM data points</strong> every day.</td>
     </tr>
     <tr>
        <td colspan="3"></td>
     </tr>
     <tr>
        <td colspan="3" style="word-wrap: break-word" width="33%">- This stylebook creates a Rewrite policy and action on ADC which can be used ot inject the Citrix Intelligent Traffic Manager (ITM) Real User Measurement JavaScript tag.</td>
     </tr>
     <tr>
        <td colspan="3" style="word-wrap: break-word" width="33%">- For more infomration about the ITM Radar Tag, see the ITM documenation <a href="https://docs.citrix.com/en-us/citrix-intelligent-traffic-management/radar.html" target="_blank">here</a>.  For more information about Citrix ITM click <a href="https://www.citrix.com/products/citrix-intelligent-traffic-management/" target="_blank">here</a></td>
     </tr>
     <tr>
        <td colspan="3" style="word-wrap: break-word" width="33%">- You can optionally bind the generated policy to a specific HTTP, SSL, or VPN VServer</td>
     </tr>
     <tr>
        <td colspan="3" style="word-wrap: break-word" width="33%">- If the Rewrite feature is not enabled, this StyleBook will first enable the feature prior to creating the policy and action. Fields marked with an * are required</td>
     </tr>
     </table>
    type: object
    required: true
    parameters:
      -
        name: tagid
        label: ITM Radar Tag ID
        description: |
         Input the Customer ID for your Radar Tag which can be found in your citrix.cloud.com <a href="https://itm.cloud.com/ui/radar/tag">ITM Management portal</a>
        type: string
        key: true
        gui:
         updatable: true
        required: true
      -
        name: tagtype
        label: ITM Radar Tag type
        description: |
         <table style="border-spacing: 1px;border: 1px solid black;">
         <caption>Radar Tabg Type Legend</caption>
         <tr style="color: white;background-color: black;">
           <th width="30%">Tag Type</th>
           <th width="70%">Description</th>
         </tr>
         <tr>
           <td width="30%">Default Radar Tag</td>
           <td width="70%">This is the recommended version of the Radar tag. This version waits until the load event is complete before downloading and executing the Radar Client, ensuring that the load event is uninterrupted</td>
         </tr>
         <tr>
          <td width="30%">Pre-loading Radar Tag</td>
          <td width="70%"">This version of the tag keeps the download of the Radar Client from blocking further parsing of the page, but executes it before the load event has fired. It is mainly for customers using Content Security Policy settings preventing the use of inline JavaScript. It is also for customers using the Video QoS plugin, where the Radar Client needs to load as early as possible.</td>
         </tr>
         </table>
        type: string
        allowed-values:
         - "Default"
         - "Pre-loading"
        default: "Default"
        required: true
      -
        name: tag-rw-policy
        label: ITM Radar Tag Rewrite Policy
        description: The conditions which need to be met to invoke the rewrite policy that inserts the radar tag.
        type: string
        gui:
         text-area: true
        default: "HTTP.RES.HEADER(\"Content-Type\").TO_LOWER.CONTAINS(\"text/html\")"
        required: true
  -
    name: vserver-bindings
    label: VServer Binding (optional)
    description: Specify the VServer object you want to bind this policy to.
    type: object[]
    required: false
    parameters:
      -
        name: vserver-name
        label: Virtual Server Name
        description: Exact virtual server name to which the rewrite policy is bound
        type: string
        required: true
      -
        name: vserver-type
        label: VServer Type
        description: |
          <table style="border-spacing: 1px;border: 1px solid black;">
          <caption>Binding Legend</caption>
          <tr style="color: white;background-color: black;">
            <th width="30%">Bind Type</th>
            <th width="70%">Description</th>
          </tr>
          <tr>
            <td width="20%">LB</td>
            <td width="80%">Load Balancing VServer</td>
          <tr>
           <td width="20%">CS</td>
           <td width="80%"">Content Switching or Unified Gateway VServer</td>
          </tr>
          <tr>
           <td width="20%">VPN</td>
           <td width="80%"">Gateway VServer</td>
          </tr>
          <tr>
            <td width="20%">Global</td>
            <td width="80%"">Global Override</td>
          </tr>
          </table>
        type: string
        allowed-values:
         - "LB"
         - "CS"
         - "VPN"
         - "Global"
        default: "LB"
        required: true
      -
        name: rewrite-bind-priority
        label: VServer Binding Priority
        description: The priority to use when binding the rewrite policy to the specified VServer
        type: number
        default: 100
        required: true
      -
        name: test-image
        label: Host Radar Test Image on ADC (optional)
        description: |
           Optionally create a responder policy and action to host the the Radar performance test gif on ADC
           <strong>Note</strong> - you may need to run # nsapimgr_wr.sh -ys arg1=1 -ys call=ns_pi_set_char_is_byte on the target ADC prior to config creation
        type: object
        required: false
        parameters:
          -
            name: responder-policy
            label: ITM Radar Test Image Responder Policy
            description: The conditions which need to be met to invoke the responder policy for the test image
            type: string
            gui:
             text-area: true
            default: HTTP.REQ.URL.PATH.GET_REVERSE(0).SET_TEXT_MODE(IGNORECASE).EQ("r20.gif")
            required: true
          -
            name: responder-bind-priority
            label: VServer Binding Priority
            description: The priority to use when binding the responder policy to the specified VServer
            type: number
            default: 100
            required: true
components:
  -
    name: rewrite-enable-feature-comp
    type: ns::nsfeature
    description: Enables the REWRITE feature on Citrix ADC
    meta-properties:
      action: enable
    properties:
      feature: ["rewrite"]
  -
    name: rewrite-action-default
    type: ns::rewriteaction
    condition: $parameters.itm-radar-tag.tagtype == "Default"
    properties:
      name: "itm-radar-rewrite-action"
      type: insert_after
      target: str("HTTP.RES.BODY(HTTP.RES.CONTENT_LENGTH).SET_TEXT_MODE(IGNORECASE).BEFORE_STR(") + str("\"</body>\"") + ")"
      stringbuilderexpr: >-
          quotewrap(
          "<script>\\r\\n" +
          "      if (typeof window.addEventListener === " + str("\\\"") + "function" + str("\\\"") + ") {\\r\\n" +
          "            window.addEventListener(" + str("\\\"") + "load" + str("\\\"") + ", function() {\\r\\n" +
          "                    if window.cedexis === undefined {\\r\\n"
          ) + "+" +
          quotewrap(
          "                         var radar = document.createElement(" + str("\\\"") + "script" + str("\\\"") + ");\\r\\n" +
          "                         radar.src = " + str("\\\"") + str("//radar.cedexis.com/1/") + str($parameters.itm-radar-tag.tagid) + "/radar.js" + str("\\\"") +
          "                         document.body.appendChild(radar)\\r\\n"
          ) + "+" +
          quotewrap(
          "                   }\\r\\n" +
          "            })\\r\\n" +
          "      }\\r\\n" +
          "</script>"
          )
  -
    name: rewrite-action-preload
    type: ns::rewriteaction
    condition: $parameters.itm-radar-tag.tagtype == "Pre-loading"
    properties:
      name: "itm-radar-rewrite-action"
      type: insert_after
      target: str("HTTP.RES.BODY(HTTP.RES.CONTENT_LENGTH).SET_TEXT_MODE(IGNORECASE).BEFORE_STR(") + str("\"</body>\"") + ")"
      stringbuilderexpr: >-
          quotewrap(
          "<script async src=" + str("\\\"") + "//radar.cedexis.com/1/" + str($parameters.itm-radar-tag.tagid) + "/radar.js" + str("\\\"") + ">" +
          "</script>"
          )
  -
    name: itm-rewrite-policy
    type: ns::rewritepolicy
    description: The rewrite policy uses the default or preload action based on user selected radar tag type
    properties:
      name: "itm-radar-rewrite_pol"
      rule: $parameters.itm-radar-tag.tag-rw-policy
      action: if-then-else($parameters.itm-radar-tag.tagtype == "Pre-loading", if-then-else($parameters.itm-radar-tag.tagtype != "Default", $components.rewrite-action-preload.properties.name), $components.rewrite-action-default.properties.name)
  -
    name: itm-responder-action
    type: ns::responderaction
    description: This rewrite action responds with the 1x1 pixel gif image payload from the ITM radar performance test query
    properties:
      name: "itm-radar-test-image-responder_act"
      type: respondwith
      target: >-
        quotewrap(
        "HTTP/1.1 200 OK\\r\\n" + "Date:" + "SYS.TIME" + str("\\r\\n") + "Cache-Control: no-cache\\r\\n" + "Pragma: no-cache\\r\\n" + "Expires: 0\\r\\n" + "Timing-Allow-Origin: *\\r\\n" + "Content-Type: image/gif\\r\\n" + "Content-Length: 43" + "\\r\\n\\r\\n" + "\\x47\\x49\\x46\\x38\\x39\\x61\\x01\\x00\\x01\\x00\\x80\\x00\\x00\\xff\\xff\\xff\\x00\\x00\\x00\\x21\\xf9\\x04\\x00\\x00\\x00\\x00\\x00\\x2c\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x00\\x00\\x02\\x02\\x44\\x01\\x00\\x3b"
        )
      comment: "itm radar performance test image object"
  -
    name: itm-responder-policy
    type: ns::responderpolicy
    description: This rewrite policy matches the inbound query for the ITM Radar test image
    properties:
      name: "itm-radar-test-image-responder_pol"
      rule: str(HTTP.REQ.URL.PATH.GET_REVERSE) + "(0).SET_TEXT_MODE" + "(IGNORECASE).EQ" + "(\"r20.gif\")"
      action: $components.itm-responder-action.properties.name
      comment: "itm radar performance test image object"
  -
    name: rewrite-policy-binding-lb
    type: ns::lbvserver_rewritepolicy_binding
    repeat: $parameters.vserver-bindings
    repeat-item: binding
    repeat-condition: $binding.vserver-type == "LB"
    properties:
      name: $binding.vserver-name
      policyname: $components.itm-rewrite-policy.properties.name
      priority: $binding.rewrite-bind-priority
      gotopriorityexpression: END
      bindpoint: RESPONSE
  -
    name: rewrite-policy-binding-cs
    type: ns::csvserver_rewritepolicy_binding
    repeat: $parameters.vserver-bindings
    repeat-item: binding
    repeat-condition: $binding.vserver-type == "CS"
    properties:
      name: $binding.vserver-name
      policyname: $components.itm-rewrite-policy.properties.name
      priority: $binding.rewrite-bind-priority
      gotopriorityexpression: END
      bindpoint: RESPONSE
  -
    name: rewrite-policy-binding-vpn
    type: ns::vpnvserver_rewritepolicy_binding
    repeat: $parameters.vserver-bindings
    repeat-item: binding
    repeat-condition: $binding.vserver-type == "VPN"
    properties:
      name: $binding.vserver-name
      policy: $components.itm-rewrite-policy.properties.name
      priority: $binding.rewrite-bind-priority
      gotopriorityexpression: END
      bindpoint: RESPONSE
  -
    name: rewrite-policy-binding-global
    type: ns::rewriteglobal_rewritepolicy_binding
    repeat: $parameters.vserver-bindings
    repeat-item: binding
    repeat-condition: $binding.vserver-type == "GLOBAL"
    properties:
      policyname: $components.itm-rewrite-policy.properties.name
      priority: $binding.rewrite-bind-priority
      type: "RES_OVERRIDE"
      gotopriorityexpression: END
  -
    name: responder-policy-binding-lb
    type: ns::lbvserver_responderpolicy_binding
    repeat: $parameters.vserver-bindings
    repeat-item: binding
    repeat-condition: $binding.vserver-type == "LB"
    properties:
      name: $binding.vserver-name
      policyname: $components.itm-responder-policy.properties.name
      priority: $binding.rewrite-bind-priority
      gotopriorityexpression: END
      bindpoint: RESPONSE
  -
    name: responder-policy-binding-cs
    type: ns::csvserver_responderpolicy_binding
    repeat: $parameters.vserver-bindings
    repeat-item: binding
    repeat-condition: $binding.vserver-type == "CS"
    properties:
      name: $binding.vserver-name
      policyname: $components.itm-responder-policy.properties.name
      priority: $binding.rewrite-bind-priority
      gotopriorityexpression: END
      bindpoint: RESPONSE
  -
    name: responder-policy-binding-vpn
    type: ns::vpnvserver_responderpolicy_binding
    repeat: $parameters.vserver-bindings
    repeat-item: binding
    repeat-condition: $binding.vserver-type == "VPN"
    properties:
      name: $binding.vserver-name
      policy: $components.itm-responder-policy.properties.name
      priority: $binding.rewrite-bind-priority
      gotopriorityexpression: END
      bindpoint: RESPONSE
  -
    name: responder-policy-binding-global
    type: ns::responderglobal_responderpolicy_binding
    repeat: $parameters.vserver-bindings
    repeat-item: binding
    repeat-condition: $binding.vserver-type == "GLOBAL"
    properties:
      policyname: $components.itm-responder-policy.properties.name
      priority: $binding.rewrite-bind-priority
      type: "RES_OVERRIDE"
      gotopriorityexpression: END

outputs:
  -
    name: itm-rewrite-enable-feature
    value: $components.rewrite-enable-feature-comp
  -
    name: itm-radar-rw-action-preload
    value: $components.rewrite-action-preload
    condition: $parameters.itm-radar-tag.tagtype == "Pre-loading"
  -
    name: itm-radar-rw-action-default
    value: $components.rewrite-action-default
    condition: $parameters.itm-radar-tag.tagtype == "Default"
  -
    name: itm-radar-rw-policy
    value: $components.itm-rewrite-policy
  -
    name: itm-radar-res-action
    value: $components.itm-responder-action
    condition: $parameters.vserver-bindings
  -
    name: itm-radar-res-policy
    value: $components.itm-responder-policy
    condition: $parameters.vserver-bindings
  -
    name: rewrite-policy-binding-lb
    value: $components.rewrite-policy-binding-lb
    condition: $parameters.vserver-bindings
  -
    name: rewrite-policy-binding-cs
    value: $components.rewrite-policy-binding-cs
    condition: $parameters.vserver-bindings
